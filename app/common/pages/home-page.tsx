import type { Route } from "../../+types/routes";
import type { MetaFunction } from "react-router";
import { Link } from "react-router";
import { Button } from "../components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "../components/ui/card";
import { PostCard } from "~/features/posts/components/post-card";
import { ProductCard } from "~/features/products/components/product-card";
import { IdeaCard } from "~/features/ideas/components/idea-card";
import { JobCard } from "~/features/jobs/components/job-card";
import { TeamCard } from "~/features/teams/components/team-card";
import { Badge } from "../components/ui/badge";
import { Avatar } from "@radix-ui/react-avatar";
import { AvatarFallback, AvatarImage } from "../components/ui/avatar";

// @NOTICE: Loader funcdtion is executed on the server side.
// @NOTICE: It runs before the component is rendered.
// @NOTICE: It returns the data that will be passed to the component by the loaderData prop.
export function loader({ request }: Route.LoaderArgs) {
  return {
    hello: "world",
  };
}

export const meta: MetaFunction = () => {
  return [
    { title: "Wemake - Home" },
    { name: "description", content: "Welcome to Wemake - Discover amazing products and connect with our community" }
  ];
};

export default function HomePage({ loaderData }: Route.ComponentProps) {
  return (
    <div className="px-20 space-y-40">
      <div className="grid grid-cols-3 gap-4">
        <div>
          <h2 className="text-5xl font-bold leading-tight tracking-tight">Today's Products ({loaderData.hello})</h2>
          <p className="text-xl font-light text-foreground">The best products made by our comunity today.</p>
          <Button variant="link" className="p-0" asChild>
            <Link to="/products/leaderboards">Explore all products &rarr;</Link>
          </Button>
        </div>
        {Array.from({ length: 5 }).map((_, index) => (
          <ProductCard
            key={index}
            id={`product-${index}`}
            name={`Product ${index + 1}`}
            description={`This is the ${index + 1}th product description`}
            commentsCount={12}
            viewsCount={156}
            votesCount={12}
          />
        ))}
      </div>
      <div className="grid grid-cols-3 gap-4">
        <div>
          <h2 className="text-5xl font-bold leading-tight tracking-tight">Latest discussions</h2>
          <p className="text-xl font-light text-foreground">The latest discussions made by our comunity today.</p>
          <Button variant="link" className="p-0" asChild>
            <Link to="/products/leaderboards">Explore all discussions &rarr;</Link>
          </Button>
        </div>
        {Array.from({ length: 5 }).map((_, index) => (
          <PostCard
            key={index}
            postId="postId"
            title="Discussion Title"
            author="dorbae"
            authorAvatarUrl="https://github.com/dorbae.png"
            category="Productivity"
            postAt="12 hours ago"
          />
        ))}
      </div>
      <div className="grid grid-cols-3 gap-4">
        <div>
          <h2 className="text-5xl font-bold leading-tight tracking-tight">GPT ideas</h2>
          <p className="text-xl font-light text-foreground">The ideas generated by GPT.</p>
          <Button variant="link" className="p-0" asChild>
            <Link to="/ideas">Explore all ideas &rarr;</Link>
          </Button>
        </div>
        {Array.from({ length: 5 }).map((_, index) => (
          <IdeaCard
            key={index}
            ideaId={`idea-${index}`}
            title={`AI-powered ${index + 1} idea that revolutionizes the industry with innovative solutions and cutting-edge technology.`}
            viewsCount={123 + index * 10}
            timeAgo={`${12 + index} hours ago`}
            likesCount={12 + index * 2}
            claimed={index % 2 === 0}
          />
        ))}
      </div>
      <div className="grid grid-cols-4 gap-4">
        <div>
          <h2 className="text-5xl font-bold leading-tight tracking-tight">Jobs</h2>
          <p className="text-xl font-light text-foreground">Find your dream job.</p>
          <Button variant="link" className="p-0" asChild>
            <Link to="/jobs">Explore all jobs &rarr;</Link>
          </Button>
        </div>
        {Array.from({ length: 3 }).map((_, index) => (
          <JobCard
            key={index}
            jobId={`job-${index}`}
            title={`Software Engineer ${index + 1}`}
            company="Google"
            companyLogoUrl="https://github.com/google.png"
            postedAt={`${12 + index * 2} hours ago`}
            type="Full-time"
            companyHq={index === 0 ? "San Francisco, CA" :
              index === 1 ? "Cupertino, CA" :
                "Mountain View, CA"}
            salary="$100,000 - $120,000"
            positionLocation={index % 2 === 0 ? "Remote" : "On-site"}
          />
        ))}
      </div>
      <div className="grid grid-cols-4 gap-4">
        <div>
          <h2 className="text-5xl font-bold leading-tight tracking-tight">Find a team mate</h2>
          <p className="text-xl font-light text-foreground">Joint a team looking for a new member.</p>
          <Button variant="link" className="p-0" asChild>
            <Link to="/teams">Explore all teams &rarr;</Link>
          </Button>
        </div>
        {Array.from({ length: 3 }).map((_, index) => (
          <TeamCard
            key={index}
            teamId={`team-${index}`}
            leaderUsername="dorbae"
            leaderAvatarUrl="https://github.com/dorbae.png"
            positions={index === 0
              ? ["React Developer", "Backend Developer", "Product Manager"]
              : ["UI/UX Designer", "DevOps Engineer"]
            }
            projectDescription={index === 0
              ? "a new social media platform"
              : "an AI-powered productivity app"
            }
          />
        ))}
      </div>
    </div>
  );
}
